<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.book.dao.BookMapper">
    <resultMap id="BaseResultMap" type="com.javaclimb.book.domain.Book" >
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="author_id" jdbcType="INTEGER" property="authorId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="introduction" jdbcType="LONGVARCHAR" property="introduction"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,author_id,name,introduction,create_time,update_time,pic,url,user_id
    </sql>

    <!--     useGeneratedKeys="true" keyProperty="id"-->
    <insert id="insert" parameterType="com.javaclimb.book.domain.Book">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
                create_time,
                update_time,
            <if test="pic != null">
                pic,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="authorId != null">
                #{authorId},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
            now(),now(),
            <if test="pic != null">
                #{pic},
            </if>
            <if test="url != null">
                #{url},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.javaclimb.book.domain.Book">
        update book
        <set>
            <if test="authorId != null">
                author_id = #{authorId},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="introduction != null">
                introduction = #{introduction},
            </if>
                create_time = now(),
                update_time = now(),
            <if test="pic != null">
                pic = #{pic},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="userId != null">
                user_id = #{userID},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from book where id=#{id}
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"></include>
        from book
        where id = #{id}
    </select>

    <select id="allBook" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from book
    </select>

    <select id="bookOfName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"></include>
        from book
        where name = #{name}
    </select>

    <select id="bookOfAuthorId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"></include>
        from book
        where author_id = #{authorId}
    </select>

    <select id="bookLikeName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"></include>
        from book
        where name like #{name}
    </select>

    <select id="bookOfUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"></include>
        from book
        where user_id=#{userId}
    </select>
</mapper>